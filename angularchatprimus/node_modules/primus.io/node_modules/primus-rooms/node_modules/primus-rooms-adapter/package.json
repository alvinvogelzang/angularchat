{
  "name": "primus-rooms-adapter",
  "version": "0.1.1",
  "description": "In-memory default adapter for primus-rooms-adapter, use as abstract class",
  "author": {
    "name": "Jonathan Brumley",
    "email": "cayasso@gmail.com"
  },
  "homepage": "https://github.com/cayasso/primus-rooms-adapter",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cayasso/primus-rooms-adapter.git"
  },
  "keywords": [
    "primus",
    "primus-rooms",
    "rooms",
    "store",
    "memory",
    "engine",
    "broadcast",
    "in-memory"
  ],
  "license": "MIT",
  "dependencies": {
    "eventemitter3": "0.1.x"
  },
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*"
  },
  "readme": "# primus-rooms-adapter\n\n[![Build Status](https://travis-ci.org/cayasso/primus-rooms-adapter.png?branch=master)](https://travis-ci.org/cayasso/primus-rooms-adapter)\n[![NPM version](https://badge.fury.io/js/primus-rooms-adapter.png)](http://badge.fury.io/js/primus-rooms-adapter)\n\nIn-memory default adapter for `primus-rooms`.\n\n## Installation\n\n```\n$ npm install primus-rooms-adapter\n```\n\n## Usage\n\nUse this adapter as an abstract class for creating your own custom 'primus-rooms' adapter.\n\n\n```javascript\n\nvar utils = require('utils');\nvar Adapter = require('primus-rooms-adapter');\n\nfunction MyAdapter() {\n  Adapter.call(this);\n}\n\nutil.inherits(MyAdapter, Adapter);\n\nAdapter.prototype.broadcast = function broadcast(data, opts, clients) {\n  // Do my custom brodcast here, it could be sending to a database\n};\n\n```\n\nThen you can set your custom adapter for rooms, like this:\n\n```javascript\nprimus.use('rooms', Rooms);\n\n// by setting the property\nprimus.adapter = new MyAdapter();\n```\n\nor pass the adapter instance as argument to Primus like so:\n\n```javascript\nvar myAdapter = new MyAdapter();\nvar primus = new Primus(url, {\n  transformer: 'sockjs',\n  rooms: { adapter: myAdapter }\n});\n```\n\n## API (Abstract public methods).\n\n### adapter.set(id, room, fn)\n\nAdds a socket to a room.\n\n### adapter.get(id, fn)\n\nGet rooms socket is subscribed to.\n\n### adapter.del(id, room, fn)\n\nRemoves a socket from a room or from all rooms if a room is not passed.\n\n### adapter.brodcast(data, opts, clients)\n\nBroadcasts a packet.\n\n### adapter.clients(room, fn)\n\nGet client ids connected to this room.\n\n### adapter.empty(room, fn)\n\nRemove all sockets from a room.\n\n### adapter.isEmpty(room, fn)\n\nCheck to see if a room is empty.\n\n### adapter.clear(fn)\n\nReset store.\n\n\n## TODO\n\nAdd more tests.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jonathan Brumley &lt;cayasso@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cayasso/primus-rooms-adapter/issues"
  },
  "_id": "primus-rooms-adapter@0.1.1",
  "dist": {
    "shasum": "1db8cf5f5f2b7a2de5ebcc66a5c484a8300d34ef"
  },
  "_from": "primus-rooms-adapter@0.1.x",
  "_resolved": "https://registry.npmjs.org/primus-rooms-adapter/-/primus-rooms-adapter-0.1.1.tgz"
}
